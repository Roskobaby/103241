#include <cs50.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define ALPHABET_LENGTH 26

bool is_valid_key(string key);
void encrypt_message(string plaintext, string key);

int main(int argc, string argv[])
{
    if (argc != 2)
    {
        printf("Usage: ./substitution key\n");
        return 1;
    }

    string key = argv[1];

    if (!is_valid_key(key))
    {
        printf("Invalid key.\n");
        return 1;
    }

    string plaintext = get_string("plaintext: ");

    printf("ciphertext: ");
    encrypt_message(plaintext, key);
    printf("\n");

    return 0;
}

bool is_valid_key(string key)
{
    if (strlen(key) != ALPHABET_LENGTH)
    {
        return false;
    }

    bool letter_seen[ALPHABET_LENGTH] = {false};
    for (int i = 0; i < ALPHABET_LENGTH; i++)
    {
        if (!isalpha(key[i]))
        {
            return false;
        }

        char lower_char = tolower(key[i]);
        int index = lower_char - 'a';

        if (letter_seen[index])
        {
            return false;
        }
        letter_seen[index] = true;
    }

    return true;
}

void encrypt_message(string plaintext, string key)
{
    for (int i = 0, n = strlen(plaintext); i < n; i++)
    {
        char current_char = plaintext[i];

        if (isalpha(current_char))
        {
            char lower_char = tolower(current_char);
            int index = lower_char - 'a';
            char cipher_char = key[index];

            if (isupper(current_char))
            {
                cipher_char = toupper(cipher_char);
            }

            printf("%c", cipher_char);
        }
        else
        {
            printf("%c", current_char);
        }
    }
}
